name: 'Robot Framework'
description: 'Run Robot Framework tests'

outputs:
  robot_exit_code:
    description: "Exit code from Robot Framework execution"
    value: ${{ steps.robot-test.outputs.robot_exit_code }}
  test_status:
    description: "Status of the test execution (PASS/FAIL/NO_TESTS)"
    value: ${{ steps.robot-test.outputs.test_status }}
  report_url:
    description: "URL of the test report in S3"
    value: ${{ steps.robot-test.outputs.report_url }}

permissions:
  contents: write
  id-token: write
  pull-requests: write
  pages: write


env:
  PROV_ROLE: "arn:aws:iam::719882381898:role/github_provisioning"
  AWS_REGION: "eu-central-1"

inputs:
  allowed_shared_memory:
    description: 'Shared memory that Docker container is allowed to use'
    required: true
    default: '1g'
  browser:
    description: 'Browser to use'
    required: true
    default: 'chrome'
  robot_threads:
    description: 'Execute tests in parallel'
    required: true
    default: 1
  pabot_options:
    description: 'Extra settings for parallel execution. https://github.com/mkorpela/pabot#command-line-options'
    required: true
    default: ''
  robot_options:
    description: 'Extra options for robot command'
    required: true
    default: ''
  screen_color_depth:
    description: 'Color depth of the virtual screen'
    required: true
    default: 24
  screen_height:
    description: 'Height of the virtual screen'
    required: true
    default: 1080
  screen_width:
    description: 'Width of the virtual screen'
    required: true
    default: 1920
  robot_tests_dir:
    description: 'Directory where Robot tests are located in the repository'
    required: true
    default: 'robot_tests'
  robot_reports_dir:
    description: 'Where will the report from test be saved'
    required: true
    default: 'reports'
  robot_runner_image:
    description: 'The docker image which will be used to execute the tests'
    required: false
    default: 'ppodgorsek/robot-framework:latest'
  robot_resources_dir:
    description: 'Directory where Robot resources files are located in the repository'
    required: true
    default: 'Resources'
  s3_reports:
    description: 'S3 bucket name'
    required: false
  aws_run_dir:
    description: 'Directory path in S3 bucket where reports will be uploaded'
    required: false
    default: ''
  qase_api_token:
    description: 'Qase API token for test reporting (optional)'
    required: false
  qase_project_code:
    description: 'Qase project code for test reporting (optional)'
    required: false
  qase_host:
    description: 'Qase host URL'
    required: false
    default: 'qase.io'


runs:
  using: 'composite'
  steps:
    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ env.PROV_ROLE }}
        role-duration-seconds: 3600
        output-credentials: true

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: true

    - shell: bash
      id: robot-test
      run: ${{ github.action_path }}/test.sh
      env:
        ALLOWED_SHARED_MEMORY: ${{ inputs.allowed_shared_memory }}
        BROWSER: ${{ inputs.browser }}
        ROBOT_THREADS: ${{ inputs.robot_threads }}
        PABOT_OPTIONS: ${{ inputs.pabot_options }}
        ROBOT_OPTIONS: ${{ inputs.robot_options }}
        SCREEN_COLOR_DEPTH: ${{ inputs.screen_color_depth }}
        SCREEN_HEIGHT: ${{ inputs.screen_height }}
        SCREEN_WIDTH: ${{ inputs.screen_width }}
        ROBOT_TESTS_DIR: ${{ inputs.robot_tests_dir }}
        ROBOT_REPORTS_DIR: ${{ inputs.robot_reports_dir }}
        ROBOT_RUNNER_IMAGE: ${{ inputs.robot_runner_image }}
        ROBOT_RESOURCES_DIR: ${{ inputs.robot_resources_dir }}
        AWS_ACCESS_KEY_ID: ${{ steps.aws-credentials.outputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.aws-credentials.outputs.aws-secret-access-key }}
        AWS_SESSION_TOKEN: ${{ steps.aws-credentials.outputs.aws-session-token }}
        AWS_BUCKET_NAME: ${{ inputs.s3_reports }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
        AWS_RUN_DIR: ${{ inputs.aws_run_dir }}
        QASE_API_TOKEN: ${{ inputs.qase_api_token }}
        QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
        QASE_HOST: ${{ inputs.qase_host }}
